<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
     http://www.springframework.org/schema/context 
     http://www.springframework.org/schema/context/spring-context-3.0.xsd
     http://www.springframework.org/schema/beans 
     http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	   http://www.springframework.org/schema/jee 
	   http://www.springframework.org/schema/jee/spring-jee-3.0.xsd 
     http://www.springframework.org/schema/jdbc 
     http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
     http://www.springframework.org/schema/tx 
     http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
     http://www.springframework.org/schema/aop 
     http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	   http://www.springframework.org/schema/mvc 
	   http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
     http://www.springframework.org/schema/util 
     http://www.springframework.org/schema/util/spring-util-3.0.xsd">

	
	<!-- ***********************************运营中心数据源配置     开始************************************************ -->
	<!-- 配置数据源，使用的是alibaba的Druid(德鲁伊)数据源 -->
	<bean name="dataSourceOperationCenter" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.operationcenter.url}" />
		<property name="username" value="${jdbc.operationcenter.username}" />
		<property name="password" value="${jdbc.operationcenter.password}" />

		<!-- 初始化连接大小 -->
		<property name="initialSize" value="0" />
		<!-- 连接池最大使用连接数量 -->
		<property name="maxActive" value="50" />
		
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="0" />
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="60000" />
		<property name="poolPreparedStatements" value="true" />
		<property name="maxPoolPreparedStatementPerConnectionSize"
			value="33" />
		<!-- 用来检测有效sql -->
		<property name="validationQuery" value="${validationQuery}" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="testWhileIdle" value="true" />
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="25200000" />
		<!-- 打开removeAbandoned功能 -->
		<property name="removeAbandoned" value="true" />
		<!-- 1800秒，也就是30分钟 -->
		<property name="removeAbandonedTimeout" value="9000" />
		<!-- 关闭abanded连接时输出错误日志 -->
		<property name="logAbandoned" value="true" />
		<!-- 监控数据库 -->
		<property name="filters" value="mergeStat" />
	</bean>
	
    <bean id="sqlSessionFactoryOperationCenter" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSourceOperationCenter" />
        <property name="mapperLocations" value="classpath:sqlMapper/operationCenter/*Mapper.xml"></property>
    </bean>
    
     <!--通过模板定制mybatis的行为 -->  
	<bean id="sqlSessionTemplateOperationCenter" class="org.mybatis.spring.SqlSessionTemplate" scope="prototype">     
		<constructor-arg index="0" ref="sqlSessionFactoryOperationCenter" /> 
	</bean>  
	
    <bean id="mapperScannerOperationCenter" class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
        <property name="basePackage" value="com.ehaoyao.cfy.**.mapper.operationcenter" />  
        <!-- <property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryOperationCenter"/> -->  
        <property name="sqlSessionTemplateBeanName" value="sqlSessionTemplateOperationCenter" />
    </bean>
    
    <!-- <bean id="mapperFactoryOperationCenter" class="org.mybatis.spring.mapper.MapperFactoryBean">
	   <property name="mapperInterface" value="com.ehaoyao.cfy.**.mapper"/>
	   <property name="SqlSessionFactory" ref="sqlSessionFactoryOperationCenter"/>
 	</bean> -->
 	
    <!-- 事务管理器 -->  
    <bean id="transactionManagerOperationCenter"  
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
        <property name="dataSource" ref="dataSourceOperationCenter" />
        <qualifier value="isap" /> 
    </bean>  
    
   	<bean id="transactionTemplateOperationCenter" class="org.springframework.transaction.support.TransactionTemplate">  
       <property name="transactionManager" >  
           <ref bean="transactionManagerOperationCenter" />  
       </property>  
    </bean> 
    
    <!-- 全注解方式   需加上@Transactional -->  
    <tx:annotation-driven transaction-manager="transactionManagerOperationCenter" />
    
   	<!-- transaction-manager用于给指定的事务指定事务传播特性 -->
	<tx:advice id="txAdviceOperationCenter" transaction-manager="transactionManagerOperationCenter">
		<tx:attributes>
			<tx:method name="get*" propagation="REQUIRED" />
			<tx:method name="find*" propagation="REQUIRED" />
			<tx:method name="query*" propagation="REQUIRED" />
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="cancel*" propagation="REQUIRED" />
			<tx:method name="*" propagation="SUPPORTS" rollback-for="java.lang.Exception"/>
		</tx:attributes>
	</tx:advice>
    
     <aop:config>
		<aop:pointcut id="daoPointOperationCenter" expression="execution(* com.ehaoyao.cfy..*.service..*.*(..))" />
		<!-- 给指定的类的方法加上事务 advice-ref：事务传播建议  -->
		<aop:advisor advice-ref="txAdviceOperationCenter" pointcut-ref="daoPointOperationCenter" />
	</aop:config>  
	
	
	<!-- ***********************************运营中心数据源配置     结束************************************************ -->
   


</beans>