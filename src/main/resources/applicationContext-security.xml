<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                    http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd">
	
	<!-- 不需要权限访问 -->
	<http pattern="/bvalidator/**" security="none"></http>
	<http pattern="/css/**" security="none"></http>
	<http pattern="/fonts/**" security="none"></http>
	<http pattern="/images/**" security="none"></http>
	<http pattern="/img/**" security="none"></http>
	<http pattern="/js/**" security="none"></http>
	<http pattern="/ligerUI/**" security="none"></http>
	<http pattern="/media/**" security="none"></http>
	<http pattern="/login.do" security="none"></http>
	<http pattern="/login.jsp" security="none"></http>
	<http pattern="/sessionTimeOut.jsp" security="none"></http>
	<http pattern="/access.jsp" security="none"></http>
	<http pattern="/error.jsp" security="none"></http>
	<http pattern="/goToLogin.jsp" security="none"></http>
	<!-- 电销客服访问去电弹屏，不做登录验证  -->
	<http pattern="/outScreen.do" security="none"></http>
	<http pattern="/member2.do" security="none"></http>
	<http pattern="/healthRecords2.do" security="none"></http>
	<http pattern="/callerScreen.do" security="none"></http>
	<http pattern="/commu.do" security="none"></http>
	<!-- 物流调用短信发送接口，不做登录验证 -->
	<http pattern="/rule/recOrderSta.do" security="none"></http>
	<http pattern="/rule/sendMesg.do" security="none"></http>
    <http pattern="/rest/test.do" security="none"></http>
	<!-- 今日任务 -->
	<http pattern="nowTaskReport.do" security="none"></http>
	<!-- 根据客服ID验证客服是否存在的接口 -->
	<http pattern="user2.do" security="none"></http>
	
	<http auto-config='true' entry-point-ref="casAuthenticationEntryPoint">
		<!-- 登陆可访问 -->
		<intercept-url pattern="/index.jsp"  access="IS_AUTHENTICATED_FULLY" />
		<intercept-url pattern="/password.do" access="IS_AUTHENTICATED_FULLY" />
		<intercept-url pattern="/main.jsp" access="IS_AUTHENTICATED_FULLY" />
		<!-- 校验登陆可访问 -->
		<intercept-url pattern="/user.do?method=checkUserNameById" access="IS_AUTHENTICATED_FULLY" />
		<intercept-url pattern="/user.do?method=checkUserName" access="IS_AUTHENTICATED_FULLY" />
		<intercept-url pattern="/role.do?method=checkName" access="IS_AUTHENTICATED_FULLY" />
		<intercept-url pattern="/role.do?method=checkNameById" access="IS_AUTHENTICATED_FULLY" />
		<intercept-url pattern="/permission.do?method=checkNameById" access="IS_AUTHENTICATED_FULLY" />
		<intercept-url pattern="/permission.do?method=checkUrlById" access="IS_AUTHENTICATED_FULLY" />
		<intercept-url pattern="/permission.do?method=checkName" access="IS_AUTHENTICATED_FULLY" />
		<intercept-url pattern="/permission.do?method=checkUrl" access="IS_AUTHENTICATED_FULLY" />
		<!-- 运营中心访问，需登录验证 -->
		<intercept-url pattern="/outScreen2.do" access="IS_AUTHENTICATED_FULLY" />
		<intercept-url pattern="/member.do" access="IS_AUTHENTICATED_FULLY" />
		<intercept-url pattern="/healthRecords.do" access="IS_AUTHENTICATED_FULLY" />
		<intercept-url pattern="/communicateReport.do" access="IS_AUTHENTICATED_FULLY" />
		<intercept-url pattern="/tradeReport.do" access="IS_AUTHENTICATED_FULLY" />
		<intercept-url pattern="/callerScreen2.do" access="IS_AUTHENTICATED_FULLY" />
		<intercept-url pattern="/commu2.do" access="IS_AUTHENTICATED_FULLY" />
		<intercept-url pattern="/telGoods.do" access="IS_AUTHENTICATED_FULLY" />
		<intercept-url pattern="/rule/*" access="IS_AUTHENTICATED_FULLY" />
		<intercept-url pattern="/nowTaskReport2.do" access="IS_AUTHENTICATED_FULLY" />
		<intercept-url pattern="/orderInfo.do" access="IS_AUTHENTICATED_FULLY" />
		
		<!-- default-target-url 指定了从登录页面登录后进行跳转的页面 
			always-use-default-target true表示登录成功后强制跳转 
			authentication-failure-url 表示验证失败后进入的页面 
			login-processing-url 设置验证登录验证地址，如果不设置，默认是j_spring_security_check 
			username-parameter,password-parameter 设置登录用户名和密码的请求name，默认：j_username,j_password 
			default-target-url="/index.jsp" -->
        <!-- 退出   logout-url 退出后验证url  logout-success-url 退出后跳转页面 -->
	<!-- 	<logout logout-url="/logout"    logout-success-url="http://124.202.152.34:8081/sso/logout" /> -->
		<!-- 测试test -->
		<!-- <logout logout-url="/logout"    logout-success-url="http://124.193.221.90:9991/sso/logout" /> -->
		<logout logout-url="/logout"    logout-success-url="http://localhost:8080/sso/logout" />
		<!-- 1、注释此过滤器，不再验证是否有访问权限(访问所有资源不再判断是否具有权限)
			 2、注释此过滤器，并更改max-sessions="9999",可用一个账号登陆9999次,并且不再验证是否有访问权限(访问所有资源不再判断是否具有权限) -->
		 <custom-filter  ref="casAuthenticationFilter" position="CAS_FILTER"/>
		 <custom-filter ref="mySecurityFilter" before="FILTER_SECURITY_INTERCEPTOR" />
	 
	</http>
	<beans:bean id="casAuthenticationFilter" class="org.springframework.security.cas.web.CasAuthenticationFilter">
		<beans:property name="authenticationManager" ref="authManager"></beans:property>
	</beans:bean>
	<authentication-manager alias="authManager" erase-credentials="false" >
		<authentication-provider ref="casAuthenticationProvider">
		</authentication-provider>
	</authentication-manager>
	<beans:bean id="casAuthenticationProvider" class="org.springframework.security.cas.authentication.CasAuthenticationProvider">
		<beans:property name="authenticationUserDetailsService" ref="authenticationUserDetailsService"/>
		<beans:property name="serviceProperties" ref="serviceProperties"/>
		<beans:property name="ticketValidator">
			<beans:bean class="org.jasig.cas.client.validation.Cas20ServiceTicketValidator">
<!-- 			<beans:constructor-arg index="0" value="http://124.202.152.34:8081/sso" />  -->
			<!-- 测试test -->
			<!-- <beans:constructor-arg index="0" value="http://124.193.221.90:9991/sso" />  -->
			<beans:constructor-arg index="0" value="http://localhost:8080/sso" /> 
			</beans:bean>
		</beans:property>
		<beans:property name="key" value="cas"></beans:property>
	</beans:bean>
	<beans:bean id="serviceProperties" class="org.springframework.security.cas.ServiceProperties">
	<!-- 	<beans:property name="service" value="http://oc.ehaoyao.com/operation_center/j_spring_cas_security_check"></beans:property> -->
			<!-- 测试test -->
		<!-- <beans:property name="service" value="http://124.193.221.90:9991/operation_center/j_spring_cas_security_check"></beans:property> -->
		<beans:property name="service" value="http://localhost:8080/operation_center/j_spring_cas_security_check"></beans:property>
		<beans:property name="sendRenew" value="false"></beans:property>
	</beans:bean>
	<beans:bean id="casAuthenticationEntryPoint" class="org.springframework.security.cas.web.CasAuthenticationEntryPoint">
		<!-- <beans:property name="loginUrl" value="http://124.202.152.34:8081/sso/login"></beans:property>  -->
		<!-- 测试test -->
		<!-- <beans:property name="loginUrl" value="http://124.193.221.90:9991/sso/login"></beans:property>  -->
		<beans:property name="loginUrl" value="http://localhost:8080/sso/login"></beans:property> 
		<beans:property name="serviceProperties" ref="serviceProperties"></beans:property>
	</beans:bean>

	<!-- 登录失败后业务处理 -->
	<beans:bean id="failureHandler"
		class="com.haoyao.goods.security.LoginAuthenticationFailureHandler">
		<beans:property name="userService"  ref="userService"></beans:property>
		</beans:bean>
	<!-- 登录成功业务处理 -->
	<beans:bean id="successHandler"
		class="com.haoyao.goods.security.LoginAuthenticationSuccesssHandler">
		<beans:property name="defaultUrl" value="/index.jsp"></beans:property>  <!-- 可变换登录成功后的路径，验证用户是否拥有该权限 -->
	</beans:bean>

	<!-- 自定义过滤器 -->
	<beans:bean id="mySecurityFilter"
		class="com.haoyao.goods.security.MyFilterSecurityInterceptor">
		<beans:property name="accessDecisionManager" ref="accessDescisionManager"></beans:property>
		<beans:property name="securityMetadataSource" ref="securityMetadataSource"></beans:property>
		<beans:property name="authenticationManager" ref="authManager"></beans:property>
	</beans:bean>
	
    <!-- 页面标签权限功能依赖 -->  
    <beans:bean id="webInvocationFilter" class="org.springframework.security.web.access.DefaultWebInvocationPrivilegeEvaluator">  
           <beans:constructor-arg ref="mySecurityFilter" />  
    </beans:bean>

	<beans:bean id="securityMetadataSource"
		class="com.haoyao.goods.security.MySecurityMetadataSource">
		<beans:constructor-arg name="userService" ref="userService"></beans:constructor-arg>
		<beans:constructor-arg name="rolePermissionService" ref="rolePermissionService"></beans:constructor-arg>
	</beans:bean>

	<beans:bean id="accessDescisionManager"
		class="com.haoyao.goods.security.MyAccessDescisionManager"></beans:bean>

	<beans:bean id="authenticationUserDetailsService"
		class="com.haoyao.goods.security.MyCasAssertionUserDetailsService">
		<beans:property name="userService" ref="userService"></beans:property>
		<beans:property name="rolePermissionService" ref="rolePermissionService"></beans:property>
		<beans:property name="permissionService" ref="permissionService"></beans:property>
		<beans:property name="userRoleService" ref="userRoleService"></beans:property>
	</beans:bean>

	<beans:bean id="userService"
		class="com.haoyao.goods.service.UserServiceImpl">
		<beans:property name="userDao" ref="userDao"></beans:property>
	</beans:bean>
	<beans:bean id="userDao" class="com.haoyao.goods.dao.impl.UserDaoImpl">
		<beans:property name="sessionFactory" ref="sessionFactory" />
	</beans:bean>
	
	<beans:bean id="roleService"
		class="com.haoyao.goods.service.RoleServiceImpl">
		<beans:property name="roleDao" ref="roleDao"></beans:property>
	</beans:bean>
	<beans:bean id="roleDao" class="com.haoyao.goods.dao.impl.RoleDaoImpl">
		<beans:property name="sessionFactory" ref="sessionFactory" />
	</beans:bean>
	
	<beans:bean id="permissionService"
		class="com.haoyao.goods.service.PermissionServiceImpl">
		<beans:property name="permissionDao" ref="permissionDao"></beans:property>
	</beans:bean>
	<beans:bean id="permissionDao" class="com.haoyao.goods.dao.impl.PermissionDaoImpl">
		<beans:property name="sessionFactory" ref="sessionFactory" />
	</beans:bean>
	
	<beans:bean id="userRoleService"
		class="com.haoyao.goods.service.UserRoleServiceImpl">
		<beans:property name="userRoleDao" ref="userRoleDao"></beans:property>
		<beans:property name="userDao" ref="userDao"></beans:property>
		<beans:property name="roleDao" ref="roleDao"></beans:property>
	</beans:bean>
	<beans:bean id="userRoleDao" class="com.haoyao.goods.dao.impl.UserRoleDaoImpl">
		<beans:property name="sessionFactory" ref="sessionFactory" />
	</beans:bean>
	
	<beans:bean id="rolePermissionService" class="com.haoyao.goods.service.RolePermissionService" >
		<beans:property name="rolePermissionDao" ref="rolePermissionDao" ></beans:property>
		<beans:property name="roleService" ref="roleService" ></beans:property>
		<beans:property name="permissionService" ref="permissionService" ></beans:property>
	</beans:bean>
	<beans:bean id="rolePermissionDao" class="com.haoyao.goods.dao.impl.RolePermissionDaoImpl" >
		<beans:property name="sessionFactory" ref="sessionFactory" />
	</beans:bean>
	
	<beans:bean id="organizationService" class="com.haoyao.goods.service.OrganizationServiceImpl" >
		<beans:property name="organizationDao" ref="organizationDao" ></beans:property>
	</beans:bean>
	<beans:bean id="organizationDao" class="com.haoyao.goods.dao.impl.OrganizationDaoImpl">
		<beans:property name="sessionFactory" ref="sessionFactory" />
	</beans:bean>

	<beans:import resource="./applicationContext.xml" />

</beans:beans>